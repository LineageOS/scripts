// For the HasField method, use proto2. proto3 does not distinguish between
// fields that are not set and fields that are set to default values, e.g.,
// authtype: 0. 
syntax = "proto2";

message CarrierList {
  message CarrierMap {
    // canonicalName is not unique in CarrierList, e.g., the same settings
    // may apply to multiple MCCMNCs or MVNOs. Use this field as the lookup
    // key in CarrierSettings.
    required string canonicalName = 1;
    message CarrierId {
      required string mccMnc = 1;
      oneof mvno {
        string spn = 2;
        string imsi = 3;
        string gid1 = 4;
        string gid2 = 5;  // deprecated
      }
    }
    required CarrierId carrierId = 2;
  }
  repeated CarrierMap entry = 1;
  required int64 version = 2;
}

message CarrierSettings {
  required string canonicalName = 1; // unique key
  optional int64 version = 2;

  message CarrierApns {
    message ApnItem {
      optional string name = 1;
      required string value = 2;
      enum ApnType {
        ALL = 0;
        DEFAULT = 1;
        MMS = 2;
        SUPL = 3;
        DUN = 4;
        HIPRI = 5;
        FOTA = 6;
        IMS = 7;
        CBS = 8;
        IA = 9;
        EMERGENCY = 10;
        XCAP = 11;
        UT = 12;
      }
      repeated ApnType type = 3;
      optional string bearerBitmask = 4;
      optional string server = 5;
      optional string proxy = 6;
      optional string port = 7;
      optional string user = 8;
      optional string password = 9;
      optional int32 authtype = 10;
      optional string mmsc = 11;
      optional string mmscProxy = 12;
      optional string mmscProxyPort = 13;
      enum Protocol {
        IP = 0;
        IPV6 = 1;
        IPV4V6 = 2;
        PPP = 3;
      }
      optional Protocol protocol = 14;
      optional Protocol roamingProtocol = 15;
      optional int32 mtu = 16;
      optional int32 profileId = 17;
      optional int32 maxConns = 18;
      optional int32 waitTime = 19;  // unused
      optional int32 maxConnsTime = 20;
      optional bool carrierEnabled = 21;
      optional bool modemCognitive = 22;
      optional bool userVisible = 23;
      optional bool userEditable = 24;
      optional int32 apnSetId = 25;  // unused
      enum Xlat {
        SKIP_464XLAT_DEFAULT = 0;
        SKIP_464XLAT_DISABLE = 1;
        SKIP_464XLAT_ENABLE = 2;
      }
      optional Xlat skip464Xlat = 26;  // unused
    }
    repeated ApnItem apn = 2;
  }
  optional CarrierApns apns = 3;

  message CarrierConfig {
    message Config {
      required string key = 1;
      message TextArray {
        repeated string item = 1;
      }
      message IntArray {
        repeated int32 item = 1;
      }
      oneof value {
        string textValue = 2;
        int32 intValue = 3;
        int64 longValue = 4;
        bool boolValue = 5;
        TextArray textArray = 6;
        IntArray intArray = 7;
      }
    }
    repeated Config config = 2;
  }
  optional CarrierConfig configs = 4;

  message VendorConfigs {
    message VendorConfigClient {
      required string name = 1;
      required bytes value = 2;
    }
    repeated VendorConfigClient client = 2;
  }
  optional VendorConfigs vendorConfigs = 5;
}

message MultiCarrierSettings {
  required int64 version = 1;
  repeated CarrierSettings setting = 2;
}
